# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main  # Set a branch name to trigger deployment
      - id/350

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # with:
        #   fetch-depth: 0 # rlespinasse/drawio-export-action@v2 を使うときに指定が必要

      - name: Create gh-pages-dir
        run: |
          mkdir -p ./docs/publish

# draw.io
      # - name: Export draw.io
      #   uses: rlespinasse/drawio-export-action@v2
      #   with:
      #     path: documents/draw.io
      #     format: png
      #     output: ../../docs/publish/drawio
      #     transparent: true

# npm 準備
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
# # REST スキーマ

      # - name: OpenAPI Setup
      #   run: npm ci
      #   working-directory: ./documents/api-schema

      # - name: OpenAPI Make
      #   run: npm run redoc
      #   working-directory: ./documents/api-schema


      # - name: OpenAPI Move files
      #   run: |
      #     mkdir -p ./docs/publish/api-schema
      #     mv ./documents/api-schema/dist/index.html ./docs/publish/api-schema/

# # GraphQL スキーマ

      # - name: GraphQL Setup
      #   run: npm ci
      #   working-directory: ./documents/graphql-schema

      # - name: GraphQL Make
      #   run: npm run build
      #   working-directory: ./documents/graphql-schema


      # - name: GraphQL Move files
      #   run: |
      #     mkdir -p ./docs/publish/graphql-schema
      #     mv ./documents/graphql-schema/public/* ./docs/publish/graphql-schema/

# markdown to HTML
# pandoc
      - uses: docker://pandoc/core:2.18
        with:
          args: >- # allows you to break string into multiple lines
            --standalone
            --output=docs/index.html
            doc/index.md

# # component catalog

#       - name: StoryBook Setup
#         run: npm ci
#         working-directory: ./documents/components-catalog

#       - name: StoryBook Make
#         run: npx build-storybook -c ./.storybook -o ./components-catalog
#         working-directory: ./documents/components-catalog

#       - name: StoryBook Move files
#         run: |
#           mkdir -p ./docs/publish/components-catalog
#           mv ./documents/components-catalog/components-catalog ./docs/publish/


      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
